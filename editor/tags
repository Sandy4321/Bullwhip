!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Init	LevelEditor.cpp	/^void LevelEditor::Init(Vec2 gravity)$/;"	f	class:LevelEditor	signature:(Vec2 gravity)
Init	LevelEditor.h	/^		virtual void Init(Vec2 gravity);$/;"	p	class:LevelEditor	access:public	signature:(Vec2 gravity)
LevelEditor	LevelEditor.h	/^class LevelEditor : public SceneManager$/;"	c	inherits:SceneManager
LevelEditor::Init	LevelEditor.cpp	/^void LevelEditor::Init(Vec2 gravity)$/;"	f	class:LevelEditor	signature:(Vec2 gravity)
LevelEditor::Init	LevelEditor.h	/^		virtual void Init(Vec2 gravity);$/;"	p	class:LevelEditor	access:public	signature:(Vec2 gravity)
LevelEditor::LoadScene	LevelEditor.h	/^		virtual void LoadScene(std::string filename);$/;"	p	class:LevelEditor	access:public	signature:(std::string filename)
LevelEditor::Save	LevelEditor.h	/^		virtual void Save(std::string filename);$/;"	p	class:LevelEditor	access:public	signature:(std::string filename)
LevelEditor::Update	LevelEditor.cpp	/^void LevelEditor::Update(sf::RenderTarget& win)$/;"	f	class:LevelEditor	signature:(sf::RenderTarget& win)
LevelEditor::Update	LevelEditor.h	/^		virtual void Update(sf::RenderTarget& win);$/;"	p	class:LevelEditor	access:public	signature:(sf::RenderTarget& win)
LevelEditor::command	LevelEditor.h	/^		std::string command;$/;"	m	class:LevelEditor	access:protected
LevelEditor::doType	LevelEditor.h	/^		bool doType;$/;"	m	class:LevelEditor	access:protected
LevelEditor::inCommand	LevelEditor.h	/^		bool inCommand; \/\/whether we are doing a command currently$/;"	m	class:LevelEditor	access:protected
LevelEditor::inText	LevelEditor.h	/^		std::string inText; \/\/input text$/;"	m	class:LevelEditor	access:protected
LevelEntity	LevelEntity.h	/^class LevelEntity : public Entity$/;"	c	inherits:Entity
LevelEntity::init	LevelEntity.cpp	/^void LevelEntity::init()$/;"	f	class:LevelEntity	signature:()
LevelEntity::init	LevelEntity.h	/^		virtual void init();$/;"	p	class:LevelEntity	access:public	signature:()
LevelEntity::update	LevelEntity.h	/^		virtual void update(){};$/;"	f	class:LevelEntity	access:public	signature:()
LoadScene	LevelEditor.h	/^		virtual void LoadScene(std::string filename);$/;"	p	class:LevelEditor	access:public	signature:(std::string filename)
Save	LevelEditor.h	/^		virtual void Save(std::string filename);$/;"	p	class:LevelEditor	access:public	signature:(std::string filename)
Update	LevelEditor.cpp	/^void LevelEditor::Update(sf::RenderTarget& win)$/;"	f	class:LevelEditor	signature:(sf::RenderTarget& win)
Update	LevelEditor.h	/^		virtual void Update(sf::RenderTarget& win);$/;"	p	class:LevelEditor	access:public	signature:(sf::RenderTarget& win)
command	LevelEditor.h	/^		std::string command;$/;"	m	class:LevelEditor	access:protected
doType	LevelEditor.h	/^		bool doType;$/;"	m	class:LevelEditor	access:protected
inCommand	LevelEditor.h	/^		bool inCommand; \/\/whether we are doing a command currently$/;"	m	class:LevelEditor	access:protected
inText	LevelEditor.h	/^		std::string inText; \/\/input text$/;"	m	class:LevelEditor	access:protected
init	LevelEntity.cpp	/^void LevelEntity::init()$/;"	f	class:LevelEntity	signature:()
init	LevelEntity.h	/^		virtual void init();$/;"	p	class:LevelEntity	access:public	signature:()
update	LevelEntity.h	/^		virtual void update(){};$/;"	f	class:LevelEntity	access:public	signature:()
